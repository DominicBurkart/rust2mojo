name: MSRV Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0

jobs:
  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Install MSRV toolchain
      uses: dtolnay/rust-toolchain@1.82.0
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target/
        key: ${{ runner.os }}-msrv-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting (MSRV)
      run: cargo fmt --all --check

    - name: Run clippy (MSRV)
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests (MSRV)
      run: cargo test --all-features

    - name: Check examples compile (MSRV)
      run: cargo check --examples --all-features

    - name: Verify Cargo.toml consistency
      run: |
        CARGO_MSRV=$(grep 'rust-version' Cargo.toml | sed 's/.*"\([^"]*\)".*/\1/')
        EXPECTED_MSRV="1.82.0"
        if [[ "$CARGO_MSRV" != "$EXPECTED_MSRV" ]]; then
          echo "ERROR: Cargo.toml rust-version ($CARGO_MSRV) doesn't match MSRV ($EXPECTED_MSRV)"
          exit 1
        fi
        echo "âœ… Cargo.toml rust-version matches MSRV: $CARGO_MSRV"